global:

  ghcr:
    repo: ghcr.io/benjyhy/

  elasticsearch:
    elasticsearchPort: "9200"
    elasticsearchScheme: http
    elasticsearchUser: mycustomuser
    elasticsearchPassword: mycustompass

  mysql:
    imageVersion: 8
    port: "3306"
    auth:
      username: kubi
      password: password
      rootPassword: tamer
      database: kubi
      connection: mysql

  rabbitmq:
    port: "5672"
    auth: 
      username: kubi
      password: password

elasticsearch:
  nodes: 2
  version: 8.8.0
  mmap: false
  tlsDisabled: true

mysql:
  auth:
    createDatabase: true
    username: kubi
    password: password
    rootPassword: root
    database: kubi
    connection: mysql

rabbitmq:
  auth: 
    username: kubi
    password: password

ingressPaths:
  front:
    path: /
    port: 80
    svc: front-svc
  back:
    path: /api/
    port: 6001
    svc: back-svc
    
GrafanaIngress:
  path: /grafana
  port: 3000
  svc: grafana

KibanaIngress:
  path: /kibana
  port: 5601
  svc: kibana

dockerImageCredentials:
  registry: https://ghcr.io
  username: user
  email: email
  accessToken: aeae

front:
  replicas: 3
  port: "80"
  image:
    name: front
    tag: latest

back:
  replicas: 3
  laravelPort: "6001"
  image:
    name: back
    tag: latest
  configmap:
    appName: Laravel
    appEnv: production
    appKey: base64:h55oToUypq1BJwhcBAbtCnKscJGGS7xXF3zoDNf/yWE=
    appDebug: true
    appUrl: http://myshoppp.dev.com
    logChannel: stderr
    dbConnection: mysql
    dbPort: "3306"
    dbDatabase: shop
    broadcastDriver: log
    cacheDriver: file
    queueConnection: sync
    sessionDriver: file
    sessionLifetime: "120"
    rabbitmqPort: "5672"
    rabbitmqVhost: /

index:
  replicas: 3
  port: "9229"
  image:
    name: index
    tag: latest

reporting:
  port: "8080"
  image:
    name: reporting
    tag: latest
  webhook: https://epitechfr.webhook.office.com/webhookb2/44efbfd0-41d3-410e-86b2-38a17ffc8741@901cb4ca-b862-4029-9306-e5cd0f6d9f86/IncomingWebhook/f7b0f624355549daaae65ca9d57d9137/a9b1f7db-4b5e-4dda-b431-4d14d554139c

eck-operator:
  installCRDs: false

grafana:
  datasources:
    datasources.yaml:
      apiVersion: 1
      datasources:
      - name: Prometheus
        type: prometheus
        url: "http://{{ .Release.Name }}-prometheus-server"
  adminUser: grafanauser
  adminPassword: grafanapassword
  dashboardsConfigMaps:
    default: "grafana-dashboards"

logstash:
  logstash.conf: |
    input {
      beats {
        port => 5044
      }
    }
    output { elasticsearch { hosts => "{{ .Release.Name }}-es-http:9200" } }
  service:
    annotations: {}
    type: ClusterIP
    loadBalancerIP: ""
    ports:
      - name: beats
        port: 5044
        protocol: TCP
        targetPort: 5044
      - name: http
        port: 8080
        protocol: TCP
        targetPort: 8080

filebeat: 
  filebeatConfig:
    filebeat.yml: |
      filebeat.inputs:
      - type: container
        paths:
          - /var/log/containers/*.log
        processors:
        - add_kubernetes_metadata:
            host: ${NODE_NAME}
            matchers:
            - logs_path:
                logs_path: "/var/log/containers/"

      output.logstash:
        hosts: ["kubi-logstash:5044"]

kibana: 
  elasticsearchHosts: http://kubi-es-http:9200
  extraEnvs:
    - name: ELASTICSEARCH_USERNAME
      value: user
    - name: ELASTICSEARCH_PASSWORD
      value: password